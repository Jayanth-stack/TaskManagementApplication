{"ast":null,"code":"import api from './api';\nconst AuthService = {\n  login: async (username, password) => {\n    try {\n      const response = await api.post('/auth/signin', {\n        username,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  register: async (username, email, password, user) => {\n    try {\n      const response = await api.post('/auth/signup', {\n        username,\n        email,\n        password,\n        user // 'U' for User, 'A' for Admin\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getCurrentUser: () => {\n    const userStr = localStorage.getItem('user');\n    if (userStr) {\n      return JSON.parse(userStr);\n    }\n    return null;\n  },\n  forgotPassword: async email => {\n    try {\n      const response = await api.post('/auth/forgot-password', {\n        email\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  resetPassword: async (token, newPassword) => {\n    try {\n      const response = await api.post('/auth/reset-password', {\n        token,\n        newPassword\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nexport default AuthService;","map":{"version":3,"names":["api","AuthService","login","username","password","response","post","data","error","register","email","user","getCurrentUser","userStr","localStorage","getItem","JSON","parse","forgotPassword","resetPassword","token","newPassword"],"sources":["C:/Users/jayan/Documents/TaskMangement/frontend/src/services/AuthService.js"],"sourcesContent":["import api from './api';\r\n\r\nconst AuthService = {\r\n  login: async (username, password) => {\r\n    try {\r\n      const response = await api.post('/auth/signin', {\r\n        username,\r\n        password\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  register: async (username, email, password, user) => {\r\n    try {\r\n      const response = await api.post('/auth/signup', {\r\n        username,\r\n        email,\r\n        password,\r\n        user // 'U' for User, 'A' for Admin\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getCurrentUser: () => {\r\n    const userStr = localStorage.getItem('user');\r\n    if (userStr) {\r\n      return JSON.parse(userStr);\r\n    }\r\n    return null;\r\n  },\r\n\r\n  forgotPassword: async (email) => {\r\n    try {\r\n      const response = await api.post('/auth/forgot-password', { email });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  resetPassword: async (token, newPassword) => {\r\n    try {\r\n      const response = await api.post('/auth/reset-password', {\r\n        token,\r\n        newPassword\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default AuthService; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,cAAc,EAAE;QAC9CH,QAAQ;QACRC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDC,QAAQ,EAAE,MAAAA,CAAON,QAAQ,EAAEO,KAAK,EAAEN,QAAQ,EAAEO,IAAI,KAAK;IACnD,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,cAAc,EAAE;QAC9CH,QAAQ;QACRO,KAAK;QACLN,QAAQ;QACRO,IAAI,CAAC;MACP,CAAC,CAAC;MACF,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDI,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAIF,OAAO,EAAE;MACX,OAAOG,IAAI,CAACC,KAAK,CAACJ,OAAO,CAAC;IAC5B;IACA,OAAO,IAAI;EACb,CAAC;EAEDK,cAAc,EAAE,MAAOR,KAAK,IAAK;IAC/B,IAAI;MACF,MAAML,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,uBAAuB,EAAE;QAAEI;MAAM,CAAC,CAAC;MACnE,OAAOL,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDW,aAAa,EAAE,MAAAA,CAAOC,KAAK,EAAEC,WAAW,KAAK;IAC3C,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,sBAAsB,EAAE;QACtDc,KAAK;QACLC;MACF,CAAC,CAAC;MACF,OAAOhB,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}