{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayan\\\\Documents\\\\TaskMangement\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport AuthService from '../services/AuthService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Check if user is already logged in\n    const checkLoggedIn = async () => {\n      if (token) {\n        try {\n          const userData = AuthService.getCurrentUser();\n          setCurrentUser(userData);\n        } catch (err) {\n          // Token might be invalid or expired\n          localStorage.removeItem('token');\n          setToken(null);\n          setError('Session expired. Please login again.');\n        }\n      }\n      setLoading(false);\n    };\n    checkLoggedIn();\n  }, [token]);\n  const login = async (username, password) => {\n    try {\n      setLoading(true);\n      const response = await AuthService.login(username, password);\n      localStorage.setItem('token', response.accessToken);\n      localStorage.setItem('user', JSON.stringify({\n        id: response.id,\n        username: response.username,\n        authorities: response.authorities\n      }));\n      setToken(response.accessToken);\n      setCurrentUser({\n        id: response.id,\n        username: response.username,\n        authorities: response.authorities\n      });\n      setError('');\n      return true;\n    } catch (err) {\n      setError('Invalid username or password');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (username, email, password, userType) => {\n    try {\n      setLoading(true);\n      await AuthService.register(username, email, password, userType);\n      setError('');\n      return true;\n    } catch (err) {\n      setError('Registration failed. Please try again.');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setToken(null);\n    setCurrentUser(null);\n  };\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!token,\n    token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"NAYi1TEjeDZe8eO/RPvfjwxWd6Y=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","AuthService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","checkLoggedIn","userData","getCurrentUser","err","removeItem","login","username","password","response","setItem","accessToken","JSON","stringify","id","authorities","register","email","userType","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jayan/Documents/TaskMangement/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport AuthService from '../services/AuthService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const checkLoggedIn = async () => {\r\n      if (token) {\r\n        try {\r\n          const userData = AuthService.getCurrentUser();\r\n          setCurrentUser(userData);\r\n        } catch (err) {\r\n          // Token might be invalid or expired\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n          setError('Session expired. Please login again.');\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkLoggedIn();\r\n  }, [token]);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await AuthService.login(username, password);\r\n      localStorage.setItem('token', response.accessToken);\r\n      localStorage.setItem('user', JSON.stringify({\r\n        id: response.id,\r\n        username: response.username,\r\n        authorities: response.authorities\r\n      }));\r\n      setToken(response.accessToken);\r\n      setCurrentUser({\r\n        id: response.id,\r\n        username: response.username,\r\n        authorities: response.authorities\r\n      });\r\n      setError('');\r\n      return true;\r\n    } catch (err) {\r\n      setError('Invalid username or password');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password, userType) => {\r\n    try {\r\n      setLoading(true);\r\n      await AuthService.register(username, email, password, userType);\r\n      setError('');\r\n      return true;\r\n    } catch (err) {\r\n      setError('Registration failed. Please try again.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setToken(null);\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated: !!token,\r\n    token\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}